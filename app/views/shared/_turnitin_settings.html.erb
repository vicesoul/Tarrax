<%
  settings = assignment.turnitin_settings
  settings[:exclude_small_matches] = '1' if settings[:exclude_type] != '0'
  @settings = OpenObject.new(settings)
%>
<% form_for :settings, :url => assignment && assignment.id ? context_url(@context, :context_assignment_url, assignment) : context_url(@context, :context_assignments_url), :html => {:id => "turnitin_settings_form", :method => "PUT", :style => "padding: 1em; display: none", :title => t('titles.turnitin_options', "Turnitin Settings")} do |f| %>
<p>
  <label for="settings_originality_report_visibility">
    <%= t :originality_report_visibility, "Students can see the originality report: %{when}",
          :when => f.select(:originality_report_visibility, [
                     [t('originality_report_visible_immediately', 'immediately'), 'immediate'],
                     [t('originality_report_visible_after_grading', 'after the assignment is graded'), 'after_grading'],
                     [t('originality_report_visible_after_due_date', 'after the due date'), 'after_due_date']])
    %>
  </label>
</p>
<p>
  <b><%= before_label :compare_against, "Compare against" %></b><br />
  <%= f.check_box :s_paper_check, :id => :settings_student_paper_check %> <%= f.label :student_paper_check, :en => "other student papers" %><br />
  <%= f.check_box :internet_check %> <%= f.label :internet_check, :en => "internet database" %><br />
  <%= f.check_box :journal_check %> <%= f.label :journal_check, :en => "journals, periodicals and publications" %><br />
</p>
<p>
  <b><%= before_label :dont_consider, "Don't consider" %></b><br />
  <%= f.check_box :exclude_biblio %> <%= f.label :exclude_biblio, :en => "bibliographic material" %><br />
  <%= f.check_box :exclude_quoted %> <%= f.label :exclude_quoted, :en => "quoted material" %><br />
  <%= f.check_box :exclude_small_matches %> <%= f.label :exclude_small_matches, :en => "small matches" %><br />
  <span id="exclude_small_matches_options" style="display:block;padding-left:1.5em">
    <%= f.radio_button :exclude_type, '1', :id => :settings_exclude_fewer_than_count %>
    <label for="settings_exclude_fewer_than_count"><%= t :settings_exclude_fewer_than_count, "fewer than %{count} words", :count => text_field_tag('settings[exclude_value_count]', @settings.exclude_type == '1' ? @settings.exclude_value : '', :size => 3, :id => :settings_exclude_value_count, :title => t('titles.exclude_count', 'Exclude matches with fewer than this many words')) %></label><br />

    <%= f.radio_button :exclude_type, '2', :id => :settings_exclude_less_than_percent %>
    <label for="settings_exclude_less_than_percent"><%= t :settings_exclude_less_than_percent, "less than %{percent} percent of the document", :percent => text_field_tag('settings[exclude_value_percent]',  @settings.exclude_type == '2' ? @settings.exclude_value : '', :size => 3, :id => :settings_exclude_value_percent, :title => t('titles.exclude_percent', 'Exclude matches that comprise less than this percentage of the document')) %></label><br />
  </span>
</p>
<p>
  <button type="submit" class="btn update_button"><%= t 'buttons.update_settings', "Update Settings" %></button>
  <button type="button" class="button-secondary cancel_button"><%= t '#buttons.cancel', "Cancel" %></button>
</p>
<% end %>

<% js_block do %>
<script>
require([
  'i18nObj' /* I18n.t */,
  'jquery' /* $ */,
  'jquery.instructure_forms' /* formSubmit, formErrors */,
  'jqueryui/dialog',
  'jquery.instructure_misc_plugins' /* showIf */
], function(I18n, $) {

$(document).ready(function() {
  var noSubmit = <%= assignment.new_record? ? 'true' : 'false' %>;
  $('#settings_exclude_small_matches').change(function() {
    $('#exclude_small_matches_options').showIf($(this).attr('checked'))
  }).change();
  $('#exclude_small_matches_options label input').click(function(e) {
    e.preventDefault();
    $(this).parent().prevAll('input').first().attr('checked', true);
    $(this).focus();
  });
  var $form = $('#turnitin_settings_form');
  $('.show_turnitin_settings').click(function(e) {
    e.preventDefault();
    $form.data('parent_form', $(this).closest('form'));
    $form.show().dialog({
      width: 400,
      height: 'auto',
      autoSize: true,
      modal: true,
      autoOpen: false
    }).dialog('open');
  });
  $form.formSubmit({
    preventDegradeToFormSubmit: true,
    processData: function(data) {
      var new_data = {};
      data['settings[exclude_value]'] = (data['settings[exclude_type]'] == '2' ? data['settings[exclude_value_percent]'] : data['settings[exclude_value_count]']);
      var $parentForm = $form.data('parent_form');
      $.each(data, function(key, value) {
        if (key.match(/^settings/)) {
          key = key.replace(/^settings/, 'assignment[turnitin_settings]');
          if (noSubmit) {
            var $node = $parentForm.find('input[name="' + key + '"]');
            if (!$node.length) {
              $node = $('<input type="hidden">').attr('name', key).appendTo($parentForm);
            }
            $node.val(value);
          }
        }
        new_data[key] = value;
      });
      return new_data;
    },
    beforeSubmit: function(data) {
      $(this).find('button').attr('disabled', true).filter('.update_button').text(<%= jt('messages.updating_settings', 'Updating Settings...') %>);
    },
    success: function(data) {
      $(this).find('button').attr('disabled', false).filter('.update_button').text(<%= jt('buttons.update_settings', 'Update Settings') %>);
      $(this).dialog('close');
    },
    error: function(data) {
      $(this).formErrors(data);
      $(this).find('button').attr('disabled', false).filter('.update_button').text(<%= jt('errors.error_updating_settings', 'Error Updating Settings') %>);
    },
    noSubmit: noSubmit
  });
  $form.find('.cancel_button').click(function(event) {
    $form.dialog('close');
  });
});
});
</script>
<% end %>
