<% @active_tab = "permissions" %>
<% add_crumb t 'crumbs.permissions', "Permissions" %>
<% content_for :page_title do %><%= t :page_title, "Manage Permissions for %{account}", :account => @context.name %><% end %>
<% content_for :page_header do %>
  <h1><%= t 'titles.manage_permissions', "Manage Permissions" %></h1>
<% end %>

<% content_for :page_subhead do %>
  <h2><%= t 'titles.subhead', "Set what users are allowed to do based on their role in the course." %></h2>
<% end %>
<style type="text/css" media="screen">


  #permissions-table thead th{
    padding: 4px 10px;
    font-size: 1.0em;
    min-width: 75px;
    text-align: center;
  }
  #permissions-table tbody th {
    text-align: left;
    font-size: 12px;
  }
  #permissions-table tbody td {
    text-align: center;
  }
  .lock{
    height: 16px;
    opacity: 0;
    -moz-opacity: 0;
    filter:alpha(opacity=0);
  }
  td:hover .lock{
    opacity: 0.4;
    -moz-opacity: 0.4;
    filter:alpha(opacity=40);
    cursor: pointer;
  }
  img.lock.locked{
    opacity: 1;
    -moz-opacity: 1;
    filter:alpha(opacity=1);
  }
  img.lock.disabled{
    opacity: 0;
    -moz-opacity: 0;
    filter:alpha(opacity=0);
    cursor: auto;
  }
  #permissions-table.zebra-stripes tbody tr:hover {
    background: #DCEFFB
  }
</style>

<h2><%= @context.class.to_s %> <%= t('titles.permissions', 'Permissions') %></h2>
<div style="margin:1em;">
  <div class="ui-widget ui-widget-content ui-corner-all" style="margin-bottom:1em; padding: 1em">
    <h3><%= t 'titles.explanation', "Explanation:" %></h3>
    <%= t :explanation_defaults, "The partially transparent checkboxes (%{default_checked} and %{default_unchecked}) indicate the system default.",
          :default_checked => '<span class="six-checkbox six-checkbox-default-checked"></span>'.html_safe, :default_unchecked => '<span class="six-checkbox six-checkbox-default-unchecked"></span>'.html_safe %><br />
    <%= mt :explanation_normal, "You can click to override the default and explicitly **allow** (%{normal_checked}) or **deny** (%{normal_unchecked}) this action.",
          :normal_checked => '<span class="six-checkbox six-checkbox-checked"></span>'.html_safe, :normal_unchecked => '<span class="six-checkbox six-checkbox-unchecked"></span>'.html_safe %><br />
    <%= t :explanation_disabled, "A grayed out box (%{disabled_checked} or %{disabled_unchecked}) means you are not allowed to change it.",
          :disabled_checked => '<span class="six-checkbox six-checkbox-disabled-checked"></span>'.html_safe, :disabled_unchecked => '<span class="six-checkbox six-checkbox-disabled-unchecked"></span>'.html_safe %><br />
    <%= t :explanation_locked, "If you would like to prevent anyone from overriding this in any sub-accounts, click the lock (%{lock}) icon.",
          :lock => image_tag("locked_small.png", :class => 'lock locked') %>
  </div>
  <div style="text-align: right;">
    <% if !@context.site_admin? %>
      <% if @managing_account_roles %>
        <a href="<%= context_url(@context, :context_permissions_url) %>"><%= t 'links.manage_course_roles', "Manage Course-Level Roles" %></a>
      <% else %>
        <a id="course_level_roles" href="<%= context_url(@context, :context_permissions_url, :account_roles => 1) %>"><%= t 'links.manage_accoiunt_roles', "Manage Account-Level Roles" %></a>
      <% end %>
    <% end %>
  </div>
  <% if @managing_account_roles %>
  <table id="account_roles" style="margin-bottom: 10px;" class='ui-widget ui-widget-content ui-corner-all zebra-stripes'>
    <thead class="ui-widget-header">
      <tr>
        <th><%= t 'headers.account_role_type', "Account Role Type" %></th>
        <th>&nbsp;</th>
      </tr>
    </thead>
    <tbody>
      <% @context.available_account_roles.each do |type| %>
        <tr class="<%= cycle("even", "odd") %>">
          <td style="padding: 1px 3px;"><%= AccountUser.readable_type type %></td>
          <td style="padding: 1px 3px; text-align: right;">
            <%= link_to("<i class='icon-end standalone-icon'></i>".html_safe, context_url(@context, :remove_role_context_permissions_url, :role => type, :account_roles => params[:account_roles]), :class => "no-hover remove_role_link", :method => :delete, :confirm => t('prompts.delete_role_type', "Are you sure you want to delete this role type?")) unless type == 'AccountAdmin' %>
          </td>
        </tr>
      <% end %>
      <tr>
        <td colspan="2" style="padding: 2px 3px;">
          <%form_tag(context_url(@context, :add_role_context_permissions_url)) do %>
            <input type="hidden" name="account_roles" value="1"/>
            <%= before_label :new_role_type, "New Role Type" %>
            <input class= "add_new_role" type="text" name="role_type"/>
            <button  id="add_new_role_button" class="btn btn-small" type="submit"><i class="icon-add"></i> <%= t '#buttons.add', "Add" %></button>
          <% end %>
        </td>
      </tr>
    </tbody>
  </table>
  <% end %>

  <% form_tag(context_url(@context, :context_permissions_url, :account_roles => params[:account_roles])) do %>
    <table cellspacing="0" id="permissions-table" class='ui-widget ui-widget-content ui-corner-all zebra-stripes'>
      <thead class='ui-widget-header'>
        <tr>
          <th></th>
          <% @role_types.each do |enrollment_type| %>
          <th><%= enrollment_type[:label].respond_to?(:call) ? enrollment_type[:label].call() : enrollment_type[:label] %></th>
          <% end %>
        </tr>
      </thead>
      <tbody>
        <% permissions = RoleOverride.manageable_permissions(@context) %>
        <% permissions.reject! { |k, p| (p[:available_to] & RoleOverride.enrollment_types.map { |role| role[:name] }).empty? unless @managing_account_roles } %>
        <% permissions.to_a.sort { |a, b| a.last[:label].call() <=> b.last[:label].call() } %>
        <% site_admin_permissions, permissions = permissions.partition { |(k, p)| p[:account_only] == :site_admin } %>
        <% account_permissions, permissions = permissions.partition { |(k, p)| p[:account_only] } %>
        <% unless site_admin_permissions.empty? -%>
          <tr class='ui-widget-header'>
            <td><%= t 'headers.site_admin_permissions', "Site Admin Permissions" %></td>
            <td colspan='<%= @role_types.size %>'></td>
          </tr>
          <%= render :partial => 'permission', :collection => site_admin_permissions %>
        <% end -%>
        <% unless account_permissions.empty? -%>
          <tr class='ui-widget-header'>
            <td><%= t 'headers.account_permissions', "Account Permissions" %></td>
            <td colspan='<%= @role_types.size %>'></td>
          </tr>
          <%= render :partial => 'permission', :collection => account_permissions %>
        <% end -%>
        <tr class='ui-widget-header'>
          <td><%=  t 'headers.course_permissions',  "Course & Account Permissions" %></td>
          <td colspan='<%= @role_types.size %>'></td>
        </tr>
        <%= render :partial => 'permission', :collection => permissions %>
      </tbody>
    </table>
    <div class="button-container">
      <a class="btn cancel_button" href="<%= url_for(:back) %>"><%= t '#buttons.cancel', "Cancel" %></a>
      <button type="submit" class="btn btn-primary save_permissions_changes"><%= t 'buttons.save', "Save Changes" %></button>
    </div>
  <% end -%>
</div>

<% js_block do %>
<script type="text/javascript">
require([
  'jquery' /* $ */,
  'jquery.instructure_misc_plugins' /* /\.log\(/ */
], function($) {

  $('.six-checkbox').click(function(){
    var $this = $(this);
    if (!$this.hasClass('six-checkbox-disabled-checked') && !$this.hasClass('six-checkbox-disabled-unchecked') ) { //if its not disabled
      if (!$this.hasClass("six-checkbox-checked") && !$this.hasClass("six-checkbox-unchecked")) { //if it is not explicitly set
        if ( $this.hasClass("six-checkbox-default-checked") || $this.hasClass("six-checkbox-default-unchecked") ) {
          $this
            .addClass("six-checkbox-checked")
            .find("input")
              .val('checked');
        } else {
          $this
            .addClass("six-checkbox-checked")
            .find("input")
              .val('checked');
        }
      } 
      else { // it IS explicity set
        if ($this.hasClass("six-checkbox-checked")) {
          $this
            .removeClass("six-checkbox-checked")
            .addClass("six-checkbox-unchecked")
            .find("input")
              .val('unchecked');
        }
        else { //if ($this.hasClass("six-checkbox-unchecked")) {
          $this
            .removeClass("six-checkbox-unchecked")
            .find("input")
              .val('');
        }
      }
    }
  });
  $.fn.setLockTitle = function(){
    $(this).attr('title', 
      $(this).hasClass('locked') ?
      <%= t('tooltips.locked', "This permission is locked, no one can override what is set here.").to_json.html_safe %> :
      <%= t('tooltips.lock', "Click to not allow anyone to override what is set here.").to_json.html_safe %>
    );
    return this;
  };
  $('#permissions-table .lock:not(".disabled")')
    .setLockTitle()
    .click(function(){
    $(this)
      .toggleClass('locked')
      .setLockTitle()
      .next('input')
      .val(
        $(this).hasClass('locked')
      );

    // // uncomment this part if you want it to automatically check boxes that are left at the default if they are locked
    // var $checkbox = $(this).parent().find('.six-checkbox');
    // $.each(['checked', 'unchecked'], function(){
    //   console.log(this)
    //   if ( $checkbox.hasClass('six-checkbox-default-' + this) ) {
    //     $checkbox.addClass("six-checkbox-" + this)
    //     .find("input")
    //       .val(this);
    //   }
    // });
  });
});
</script>
<% end %>
