<%
  hide_add_course ||= false; hide_add_user ||= false; hide_add_case_repostory ||= false; hide_add_knowledge_repostory ||= false;
  show_course = !hide_add_course && can_do(@account, @current_user, :manage_courses)
  # show_user = !hide_add_user && can_do(@account.root_account, @current_user, :manage_user_logins)
  show_user = !hide_add_user && can_do(@account, @current_user, :manage_user_logins)
  show_case_repostory = !hide_add_case_repostory && can_do(@account, @current_user, :create_case_repostory)
  show_knowledge_repostory = !hide_add_knowledge_repostory && can_do(@account, @current_user, :create_knowledge_repostory)
%>

<% if show_course || show_user || show_case_repostory || show_knowledge_repostory %>
<div class="rs-margin-all">
  <% if show_course %>
    <a href="#" class="add_course_link btn button-sidebar-wide"><i class="icon-add"></i> <%= t(:add_course_link, "Add a New Course") %></a>
  <% end %>
  <% if show_user %>
    <a href="#" class="add_user_link btn button-sidebar-wide"><i class="icon-user-add"></i> <%= t(:add_user_link, "Add a New User") %></a>

    <% if @current_user.admin_of_account? @account.root_account %>
      <a href="#" class="attach_users_link btn button-sidebar-wide"><i class="icon-user-add"></i> <%= t(:attach_users_link, "Attach Users") %></a>
    <% end %>
  <% end %>
  <% if show_case_repostory %>
    <a href="#" class="add_case_link btn button-sidebar-wide"><i class="icon-add"></i> <%= t(:add_case_link, "Add a Case Collection Repository") %></a>
  <% end %>
  <% if show_knowledge_repostory %>
    <a href="#" class="add_knowledge_link btn button-sidebar-wide"><i class="icon-add"></i> <%= t(:add_knowledge_link, "Add a Knowledge Repository") %></a>
  <% end %>
</div>

<div style="display: none;">
  <div id="current_enrollment_term_id"><%= @term && @term.id %></div>
  <div id="add_user_dialog">
    <% form_for :user, :url => account_add_user_url(@account), :html => {:id => "add_user_form"} do |f| %>
      <%= f.hidden_field :source, :value => 'created' %>
    <table class="formtable">
      <tr>
        <td><%= f.blabel :name, :full_name, :en => "Full Name" %></td>
        <td>
          <%= f.text_field :name %>
          <div style="font-size: 0.8em; color: #888;"><%= t :full_name_description, 'This name will be used by teachers for grading.' %></div>
        </td>
      </tr>
      <tr>
        <td><%= f.blabel :short_name, :en => "Display Name" %></td>
        <td>
          <%= f.text_field :short_name %>
          <div style="font-size: 0.8em; color: #888;"><%= t(:display_name_help, "People will see this name in discussions, messages and comments.") %></div>
        </td>
      </tr>
      <tr>
        <td><%= f.blabel :birthday, :en => "Birthday" %></td>
        <td>
          <%= f.text_field :birthday %>
          <div style="font-size: 0.8em; color: #888;"><%= t('birthday_help', "Birthday, such as '1980-01-01'.") %></div>
        </td>
      </tr>
      <tr>
        <td><%= f.blabel :mobile_phone, :en => "Mobile Phone" %></td>
        <td>
          <%= f.text_field :mobile_phone %>
          <div style="font-size: 0.8em; color: #888;"><%= t('mobile_phone_help', "Mobile phone, must be 13 bytes") %></div>
        </td>
      </tr>
      <tr>
        <td><%= f.blabel :job_number, :en => "Job Number" %></td>
        <td>
          <%= f.text_field :job_number %>
        </td>
      </tr>
      <tr>
        <td><%= f.blabel :job_position_id, :en => "Job Position" %></td>
        <td>
          <%= f.select :job_position_id, @account.root_account.job_positions.map{|j| [j.name, j.id]}, { :include_blank => true } %>
        </td>
      </tr>
      <tr>
        <td><%= f.blabel :external, :en => "Is external" %></td>
        <td>
          <%= f.radio_button :external, 'false', {:checked => true} %><%= t 'internal', 'Internal' %>
          <%= f.radio_button :external, 'true' %><%= t 'external', 'External' %>
        </td>
      </tr>
      <tr>
        <td><%= f.blabel :tags, :en => "Tags" %></td>
        <td>
          <%= f.text_field :tags %>
          <%= render :partial => 'shared/tag_selector' %>
        </td>
      </tr>
      <tr>
        <td><%= f.blabel :sortable_name, :en => "Sortable Name" %></td>
        <td>
          <%= f.text_field :sortable_name %>
          <div style="font-size: 0.8em; color: #888;"><%= t(:sortable_name_help, "This name appears in sorted lists.") %></div>
        </td>
      </tr>
      <% if @root_account.login_handle_name_is_customized? || @root_account.delegated_authentication? %>
        <tr>
          <td><%= blabel :pseudonym, :path, :en => "Email" %></td>
          <td><%= text_field :pseudonym, :path %></td>
        </tr>
      <% end %>
      <tr>
        <td><%= blabel :pseudonym, :unique_id, @root_account.login_handle_name %></td>
        <td><%= text_field :pseudonym, :unique_id %></td>
      </tr>
      <% if @root_account.allow_sis_import && can_do(@root_account, @current_user, :manage_sis) %>
        <tr>
          <td><%= blabel :pseudonym, :sis_user_id, :en => "SIS ID" %></td>
          <td><%= text_field :pseudonym, :sis_user_id %></td>
        </tr>
      <% end %>
      <tr>
        <td><%= f.blabel :account_id, :en => "Department" %></td>
        <td><%= f.select :account_id, @account.sub_accounts_as_options, :selected => @account.id %></td>
      </tr>
      <tr>
        <td colspan="2">
          <%= check_box :pseudonym, :send_confirmation, :checked => false %>
          <%= label :pseudonym, :send_confirmation, :en => "Email the user about this account creation" %>
        </td>
      </tr>
      <tr>
        <td colspan="2">
          <div class="button-container">
            <button type="button" class="btn cancel_button"><%= t("#buttons.cancel", "Cancel") %></button>
            <%= hidden_field_tag 'skip_captcha', true %>
            <button type="submit" class="btn btn-primary submit_button"><%= t(:add_user_button, "Add User") %></button>
          </div>
        </td>
      </tr>
    </table>
    <% end %>
  </div>
  <div id="add_course_dialog">
    <% form_for :course, :url => courses_url, :html => {:id => "add_course_form"} do |f| %>
    <input type="hidden" name="account_id" value="<%= @account.id %>"/>
    <table class="formtable">
      <tr>
        <td><%= f.blabel :name, :en => "Course Name" %></td>
        <td><%= f.text_field :name, :style => "width: 200px;" %></td>
      </tr><tr>
        <td><%= f.blabel :course_category_id, :en => "Course Category" %></td>
        <td>
            <%= f.select :course_category_id, CourseCategory.get_sorted_categories.map{|category| [category.name, category.id]}, {:prompt => t(:course_category_tip, 'Please select a course category')} %>
        </td>
        </tr><tr>
        <td><%= f.blabel :account_id, :en => "Department" %></td>
        <td><%= f.select :account_id, @account.sub_accounts_as_options, :selected => @term && @term.id %></td>
      </tr><tr>
        <td><%= f.label :enrollment_term_id, :en => "Enrollment Term" %></td>
        <td><%= f.select :enrollment_term_id, @root_account.enrollment_terms.active.map{|t| [t.name, t.id] }, :selected => @term && @term.id %></td>
      </tr><tr>
        <td colspan="2">
          <div class="button-container">
            <button type="button" class="btn dialog_closer"><%= t("#buttons.cancel", "Cancel") %></button>
            <button type="submit" class="btn btn-primary"><%= t(:add_course_button, "Add Course") %></button>
          </div>
        </td>
      </tr>
    </table>
    <% end %>
  </div>

  <div id="add_case_repostory_dialog">
    <% form_for :course, :url => create_case_course_url, :html => {:id => 'add_case_repostory_form'} do |f| %>
      <div>
        <%= t '#accounts.add_case_dialog_content', 'Add a new case collection repostory for your account' %>
      </div>
      <div>
        <%= f.text_field :name %>
        <%= f.hidden_field :account_id, :value => @account.id %>
        <%= f.hidden_field :sub_type , :value => 'case_issue' %>
        <%= f.hidden_field :is_public, :value => false %>
      </div>

     <td colspan="2">
        <div class="button-container">
          <button type="button" class="btn dialog_closer"><%= t("#buttons.cancel", "Cancel") %></button>
          <button type="submit" class="btn btn-primary"><%= t("#accounts.add_case_button", "Add Case Collection Repostory") %></button>
        </div>
      </td>

    <% end %>
  </div>
  
  <div id="add_knowledge_repostory_dialog">
    <% form_for :course, :url => create_case_course_url, :html => {:id => 'add_knowledge_repostory_form'} do |f| %>
      <div>
        <%= t '#accounts.add_knowledge_dialog_content', 'Add a new knowledge repostory for your account' %>
      </div>
      <div>
        <%= f.text_field :name %>
        <%= f.hidden_field :account_id, :value => @account.id %>
        <%= f.hidden_field :sub_type , :value => 'knowledge' %>
        <%= f.hidden_field :is_public, :value => false %>
      </div>

     <td colspan="2">
        <div class="button-container">
          <button type="button" class="btn dialog_closer"><%= t("#buttons.cancel", "Cancel") %></button>
          <button type="submit" class="btn btn-primary"><%= t("#accounts.add_knowledge_button", "Add Knowledge Repostory") %></button>
        </div>
      </td>

    <% end %>
  </div>

</div>

<div>
  <% form_tag account_attach_users_path(@account), :class => 'attach_users_form' do %>
    <%= hidden_field_tag :user_ids %>
  <% end %>
</div>

<% if @current_user.admin_of_account? @account.root_account %>
  <%= render :partial => 'shared/pickup_users', :locals => {:account => @account.root_account} %>
<% end %>

<% js_bundle :user_sortable_name %>
<% js_block do %>
<script>
require([
  'i18nObj' /* I18n.t */,
  'jquery' /* $ */,
  'str/htmlEscape' /* htmlEscape, /\$\.h/ */,
  'compiled/registration/registrationErrors',
  'compiled/pickup_users',
  'jquery.instructure_forms' /* formSubmit */,
  'jqueryui/dialog',
  'vendor/jquery.spin',
  'compiled/jquery/fixDialogButtons' /* fix dialog formatting */,
  'compiled/jquery.rails_flash_notifications',
  'jquery.templateData' /* fillTemplateData */
], function(I18n, $, htmlEscape, registrationErrors, PickupUsers) {

  $(document).ready(function() {
    $(".add_user_link").click(function(event) {
      event.preventDefault();
      $("#add_user_form :text").val("");
      var $dialog = $("#add_user_dialog"),
          $privacy = $('<a>', {href: "http://www.jiaoxuebang.com/privacy", style: "padding-left: 1em; line-height: 3em", class: 'privacy_policy_link', target: "_blank"}),
          $buttonPane;
      $dialog.dialog({
        title: <%= jt('#accounts.add_user_dialog_title', "Add a New User") %>,
        width: 500
      }).fixDialogButtons();
      $buttonPane = $dialog.closest('.ui-dialog').find('.ui-dialog-buttonpane');
      if (!$buttonPane.find('.privacy_policy_link').length) {
        $privacy.text(<%= jt('#site.view_privacy_policy', 'View Privacy Policy') %>);
        $dialog.closest('.ui-dialog').find('.ui-dialog-buttonpane').append($privacy);
      }
      $("#add_user_form :text:visible:first").focus().select();
    });
    var addUserForm = $("#add_user_form");
    addUserForm.formSubmit({
      required: ['user[name]'],
      beforeSubmit: function(data) {
        $(this).find("button").attr('disabled', true)
          .filter(".submit_button").text(<%= jt('#accounts.adding_user_message', "Adding User...") %>);
      },
      success: function(data) {
        $(this).find("button").attr('disabled', false)
          .filter(".submit_button").text(<%= jt('#accounts.add_user_button', "Add User") %>);
        var user = data.user.user || data.user;
        var link = "<a href='/users/" + user.id + "'>" + htmlEscape(user.name) + "</a>"
        var message = '';
        if(data.message_sent) {
            message = <%= jt('#accounts.user_added_message_sent_message', '%{user} successfully added! They should receive an email confirmation shortly.', '{user: link}') %>;
        } else {
            message = <%= jt('#accounts.user_added_message', '%{user} successfully added!', '{user: link}') %>;
        }
        $.flashMessage(message);
        $("#add_user_dialog").dialog('close');
      },
      formErrors: false,
      error: function(data) {
        $(this).find("button").attr('disabled', false)
          .filter(".submit_button").text(<%= jt('#accounts.user_add_failed_message', "Adding User Failed, please try again") %>);
        addUserForm.formErrors(registrationErrors(data));
      }
    });
    $("#add_user_dialog .cancel_button").click(function() {
      $("#add_user_dialog").dialog('close');
    });
    $(".add_course_link").click(function(event) {
      event.preventDefault();
      $("#add_course_form :text").val("");
      $("#add_course_dialog").dialog({
        title: <%= jt('#accounts.add_course_dialog_title', "Add a New Course") %>,
        width: 500
      }).fixDialogButtons();
      $("#add_course_form :text:visible:first").focus().select();
    });
    $("#add_course_form").formSubmit({
      required: ['course[name]', 'course[course_category_id]'],
      beforeSubmit: function(data) {
        $(this).find("button").attr('disabled', true)
          .filter(".submit_button").text(<%= jt('#accounts.adding_course_message', "Adding Course...") %>);
      },
      success: function(data) {
        $(this).find("button").attr('disabled', false)
          .filter(".submit_button").text(<%= jt('#accounts.add_course_button', "Add Course") %>);
        var course = data;
        if(course.enrollment_term_id == parseInt($("#current_enrollment_term_id").text(), 10)) {
          var $course = $("#course_blank").clone(true);
          var course_data = {id: course.id};
          $course.find("a.name").text(course.name);
          $course.fillTemplateData({
            data: course_data,
            hrefValues: ['id'],
            id: 'course_' + course.id
          });
          $course.find(".unpublished_icon").show();
          $("ul.courses").prepend($course);
          $course.slideDown();
        }
        $.flashMessage(<%= jt('#accounts.course_added_message', "%{course} successfully added!", '{course: course.name}') %>);
        $("#add_course_dialog").dialog('close');
        window.location.reload();
      },
      error: function(data) {
        $(this).find("button").attr('disabled', false)
          .filter(".submit_button").text(<%= jt('#accounts.course_add_failed_message', "Adding Course Failed, please try again") %>);
      }
    });
    $("#add_course_dialog .cancel_button").click(function() {
      $("#add_course_dialog").dialog('close');
    });

    $('.attach_users_form').formSubmit({
      beforeSubmit: function(data) {
        PickupUsers.dialog.spin();
        PickupUsers.insertButton.attr('disabled', true)
      },
      success: function(data) {
        var message = <%= jt('#accounts.users_attached_message', 'users successfully attached!') %>;
        $.flashMessage(message);
        PickupUsers.insertButton.attr('disabled', false)
        PickupUsers.dialog.spin(false);

        // TODO update dom here
        window.location.reload();
      },
      formErrors: false,
      error: function(data) {
        PickupUsers.insertButton.text(<%= jt('#accounts.user_add_failed_message', "Adding User Failed, please try again") %>);
        PickupUsers.insertButton.attr('disabled', false)
        PickupUsers.dialog.spin(false);
      }
    });
    PickupUsers.init({
      insertClick: function() {
        this.autoClose = false;
        var emails;
        emails = this.checked().map(function(index, el) {
          return $(el).val();
        }).get().join(',');

        $('.attach_users_form').find('#user_ids').val(emails);
        $('.attach_users_form').submit();
      }
    });
    $(document).on('click', '.attach_users_link', function(e){
      e.preventDefault();
      PickupUsers.open();
    });
    //create case event
    $('.add_case_link').bind('click', function(){
      $('#add_case_repostory_dialog').dialog({
        title: <%= jt('#accounts.add_case_dialog_title', 'Add a New Case Collection Repostory') %>,
        width: 500
      });
      return false;
    });

    $('#add_case_repostory_dialog .dialog_closer').bind('click', function(){
      $('#add_case_repostory_dialog').dialog('close');
    });

    $('#add_case_repostory_form').formSubmit({
      success: function(data){
        if(data){
          $.flashMessage(<%= jt('#accounts.add_case_successfully', 'Added case collection repostory successfully.')%>);
          window.location.href = '<%= account_case_repositories_url(@context) %>';
        }else{
          alert(<%= jt('#accounts.add_case_failure', 'Create Case Collection Repostory failure.') %>);
        }
      },
      error: function(){
        alert(<%= jt('#accounts.add_case_failure', 'Create Case Collection Repostory failure.') %>);
      }
    });

    //create knowledge event
    $('.add_knowledge_link').bind('click', function(){
      $('#add_knowledge_repostory_dialog').dialog({
        title: <%= jt('#accounts.add_knowledge_dialog_title', 'Add a New Knowledge Collection Repostory') %>,
        width: 500
      });
      return false;
    });

    $('#add_knowledge_repostory_dialog .dialog_closer').bind('click', function(){
      $('#add_knowledge_repostory_dialog').dialog('close');
    });

    $('#add_knowledge_repostory_form').formSubmit({
      success: function(data){
        if(data){
          $.flashMessage(<%= jt('#accounts.add_knowledge_successfully', 'Added knowledge collection repostory successfully.')%>);
          window.location.href = '<%= account_knowledge_repositories_url(@context) %>';
        }else{
          alert(<%= jt('#accounts.add_knowledge_failure', 'Create Knowledge Collection Repostory failure.') %>);
        }
      },
      error: function(){
        alert(<%= jt('#accounts.add_knowledge_failure', 'Create Knowledge Collection Repostory failure.') %>);
      }
    });


  });
});
</script>
<% end %>
<% end %>
